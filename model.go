// Code generated by protoc-json-go. DO NOT EDIT.
package plugin_api



type ValueType uint8

const (
	StringVal ValueType = 1
	IntVal    ValueType = 2
	BoolVal   ValueType = 3
	PathVal   ValueType = 4 // 路径选择，会调用路径选择的组件进行
)

type FormData struct {
	Name      string      `json:"name"`
	Value     interface{} `json:"value"`
	Label     string      `json:"label"`
	ValueType ValueType   `json:"value_type"`
}

// auth type
type AuthType struct {
	UseForm bool        `json:"use_form"`
	Forms   []*FormData `json:"forms"`

	UseQrcode        bool   `json:"use_qrcode"`
	QrcodeImage      []byte `json:"qrcode_image"`       // qrcode image
	QrcodeExpireTime uint64 `json:"qrcode_expire_time"` // qrcode expire time

	UseOauth          bool   `json:"use_oauth"`
	Oauth2Url         string `json:"oauth_url"`
	OauthCallBackData string `json:"oauth_callback_data"`
}

type State int32

const (
	UNSPECIFIED State = 0
	Success     State = 1
	Fail        State = 2
	AuthFinish  State = 3
	AuthExpired State = 4
)

type Status struct {
	State State `json:"state"`
	Msg   string       `json:"msg"`
}

type FileType int32

const (
	FileTypeUNSPECIFIED FileType = 0
	FileTypeDir         FileType = 1
	FileTypeFile        FileType = 2
)

type FileEntry struct {
	Name         string   `json:"name"`
	FileType     FileType `json:"fileType"`
	Size         uint64   `json:"size"`
	FileMode     uint32   `json:"file_mode"`
	CreatedTime  uint64   `json:"created_time"`
	ModifiedTime uint64   `json:"modified_time"`
	AccessedTime uint64   `json:"accessed_time"`
}

type DirEntry struct {
	FileEntries []*FileEntry `json:"file_entries"`
	Status      *Status      `json:"status"`
}

type VideoResolution int32

const (
	Unspecified VideoResolution = 0
	Original    VideoResolution = 1 // Origin
	SD          VideoResolution = 2 // 480P high defintion
	HD          VideoResolution = 3 // 720P high defintion
	FHD         VideoResolution = 4 // 1080P full high defintion
	QHD         VideoResolution = 5 // 2K  quad high defintion
	UHD         VideoResolution = 6 // 4K ultra high defintion
)

type FileResourceType int32

const (
	MediaResourceTypeUNSPECIFIED FileResourceType = 0
	Video                        FileResourceType = 1
	Subtitle                     FileResourceType = 2
	Audio                        FileResourceType = 3
)

type FileResourceData struct {
	Url              string            `json:"url"`
	VideoResolution  VideoResolution   `json:"video_resolution"`
	ExpireTime       uint64            `json:"expire_time"`
	FileResourceType FileResourceType  `json:"file_resource_type"`
	Title            string            `json:"title"`
	Header           map[string]string `json:"header"`
}

type FileResource struct {
	FileResourceData []*FileResourceData `json:"file_resource_data"`
	Status           *Status             `json:"status"`
}
