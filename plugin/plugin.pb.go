// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: plugin/plugin.proto

package plugin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileEntry_FileType int32

const (
	FileEntry_FileTypeUNSPECIFIED FileEntry_FileType = 0
	FileEntry_FileTypeDir         FileEntry_FileType = 1
	FileEntry_FileTypeFile        FileEntry_FileType = 2
	FileEntry_FileTypeLink        FileEntry_FileType = 3
)

// Enum value maps for FileEntry_FileType.
var (
	FileEntry_FileType_name = map[int32]string{
		0: "FileTypeUNSPECIFIED",
		1: "FileTypeDir",
		2: "FileTypeFile",
		3: "FileTypeLink",
	}
	FileEntry_FileType_value = map[string]int32{
		"FileTypeUNSPECIFIED": 0,
		"FileTypeDir":         1,
		"FileTypeFile":        2,
		"FileTypeLink":        3,
	}
)

func (x FileEntry_FileType) Enum() *FileEntry_FileType {
	p := new(FileEntry_FileType)
	*p = x
	return p
}

func (x FileEntry_FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileEntry_FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_plugin_proto_enumTypes[0].Descriptor()
}

func (FileEntry_FileType) Type() protoreflect.EnumType {
	return &file_plugin_plugin_proto_enumTypes[0]
}

func (x FileEntry_FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileEntry_FileType.Descriptor instead.
func (FileEntry_FileType) EnumDescriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{1, 0}
}

// video display VideoResolution
type FileResource_Resolution int32

const (
	FileResource_ResolutionUNSPECIFIED FileResource_Resolution = 0
	FileResource_Original              FileResource_Resolution = 1 // Origin
	FileResource_LD                    FileResource_Resolution = 2 // 360P high defintion
	FileResource_SD                    FileResource_Resolution = 3 // 480P high defintion
	FileResource_HD                    FileResource_Resolution = 4 // 720P high defintion
	FileResource_FHD                   FileResource_Resolution = 5 // 1080P full high defintion
	FileResource_QHD                   FileResource_Resolution = 6 // 2K  quad high defintion
	FileResource_UHD                   FileResource_Resolution = 7 // 4K ultra high defintion
)

// Enum value maps for FileResource_Resolution.
var (
	FileResource_Resolution_name = map[int32]string{
		0: "ResolutionUNSPECIFIED",
		1: "Original",
		2: "LD",
		3: "SD",
		4: "HD",
		5: "FHD",
		6: "QHD",
		7: "UHD",
	}
	FileResource_Resolution_value = map[string]int32{
		"ResolutionUNSPECIFIED": 0,
		"Original":              1,
		"LD":                    2,
		"SD":                    3,
		"HD":                    4,
		"FHD":                   5,
		"QHD":                   6,
		"UHD":                   7,
	}
)

func (x FileResource_Resolution) Enum() *FileResource_Resolution {
	p := new(FileResource_Resolution)
	*p = x
	return p
}

func (x FileResource_Resolution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileResource_Resolution) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_plugin_proto_enumTypes[1].Descriptor()
}

func (FileResource_Resolution) Type() protoreflect.EnumType {
	return &file_plugin_plugin_proto_enumTypes[1]
}

func (x FileResource_Resolution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileResource_Resolution.Descriptor instead.
func (FileResource_Resolution) EnumDescriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{5, 0}
}

type FileResource_ResourceType int32

const (
	FileResource_ResourceTypeUNSPECIFIED FileResource_ResourceType = 0
	FileResource_Video                   FileResource_ResourceType = 1
	FileResource_Subtitle                FileResource_ResourceType = 2
	FileResource_Audio                   FileResource_ResourceType = 3
)

// Enum value maps for FileResource_ResourceType.
var (
	FileResource_ResourceType_name = map[int32]string{
		0: "ResourceTypeUNSPECIFIED",
		1: "Video",
		2: "Subtitle",
		3: "Audio",
	}
	FileResource_ResourceType_value = map[string]int32{
		"ResourceTypeUNSPECIFIED": 0,
		"Video":                   1,
		"Subtitle":                2,
		"Audio":                   3,
	}
)

func (x FileResource_ResourceType) Enum() *FileResource_ResourceType {
	p := new(FileResource_ResourceType)
	*p = x
	return p
}

func (x FileResource_ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileResource_ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_plugin_proto_enumTypes[2].Descriptor()
}

func (FileResource_ResourceType) Type() protoreflect.EnumType {
	return &file_plugin_plugin_proto_enumTypes[2]
}

func (x FileResource_ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileResource_ResourceType.Descriptor instead.
func (FileResource_ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{5, 1}
}

type Auth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthMethods   []*anypb.Any           `protobuf:"bytes,1,rep,name=auth_methods,json=authMethods,proto3" json:"auth_methods,omitempty"` //
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth) Reset() {
	*x = Auth{}
	mi := &file_plugin_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *Auth) GetAuthMethods() []*anypb.Any {
	if x != nil {
		return x.AuthMethods
	}
	return nil
}

type FileEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FileType      FileEntry_FileType     `protobuf:"varint,2,opt,name=file_type,json=fileType,proto3,enum=plugin.FileEntry_FileType" json:"file_type,omitempty"`
	Size          uint64                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	RawData       []byte                 `protobuf:"bytes,4,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`
	CreatedTime   uint64                 `protobuf:"varint,10,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	ModifiedTime  uint64                 `protobuf:"varint,11,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	AccessedTime  uint64                 `protobuf:"varint,12,opt,name=accessed_time,json=accessedTime,proto3" json:"accessed_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileEntry) Reset() {
	*x = FileEntry{}
	mi := &file_plugin_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEntry) ProtoMessage() {}

func (x *FileEntry) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEntry.ProtoReflect.Descriptor instead.
func (*FileEntry) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *FileEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileEntry) GetFileType() FileEntry_FileType {
	if x != nil {
		return x.FileType
	}
	return FileEntry_FileTypeUNSPECIFIED
}

func (x *FileEntry) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileEntry) GetRawData() []byte {
	if x != nil {
		return x.RawData
	}
	return nil
}

func (x *FileEntry) GetCreatedTime() uint64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *FileEntry) GetModifiedTime() uint64 {
	if x != nil {
		return x.ModifiedTime
	}
	return 0
}

func (x *FileEntry) GetAccessedTime() uint64 {
	if x != nil {
		return x.AccessedTime
	}
	return 0
}

type DirEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileEntries   []*FileEntry           `protobuf:"bytes,1,rep,name=file_entries,json=fileEntries,proto3" json:"file_entries,omitempty"`
	DirEntryKey   string                 `protobuf:"bytes,10,opt,name=dir_entry_key,json=dirEntryKey,proto3" json:"dir_entry_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirEntry) Reset() {
	*x = DirEntry{}
	mi := &file_plugin_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirEntry) ProtoMessage() {}

func (x *DirEntry) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirEntry.ProtoReflect.Descriptor instead.
func (*DirEntry) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *DirEntry) GetFileEntries() []*FileEntry {
	if x != nil {
		return x.FileEntries
	}
	return nil
}

func (x *DirEntry) GetDirEntryKey() string {
	if x != nil {
		return x.DirEntryKey
	}
	return ""
}

type GetDirEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	PathEntry     *FileEntry             `protobuf:"bytes,2,opt,name=path_entry,json=pathEntry,proto3" json:"path_entry,omitempty"`
	Page          uint64                 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint64                 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	DirEntryKey   string                 `protobuf:"bytes,10,opt,name=dir_entry_key,json=dirEntryKey,proto3" json:"dir_entry_key,omitempty"` // dir entry key,may be help you to get multi page for one path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDirEntryRequest) Reset() {
	*x = GetDirEntryRequest{}
	mi := &file_plugin_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDirEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirEntryRequest) ProtoMessage() {}

func (x *GetDirEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirEntryRequest.ProtoReflect.Descriptor instead.
func (*GetDirEntryRequest) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *GetDirEntryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetDirEntryRequest) GetPathEntry() *FileEntry {
	if x != nil {
		return x.PathEntry
	}
	return nil
}

func (x *GetDirEntryRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetDirEntryRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetDirEntryRequest) GetDirEntryKey() string {
	if x != nil {
		return x.DirEntryKey
	}
	return ""
}

type GetFileResourceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	PathEntry     *FileEntry             `protobuf:"bytes,2,opt,name=path_entry,json=pathEntry,proto3" json:"path_entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileResourceRequest) Reset() {
	*x = GetFileResourceRequest{}
	mi := &file_plugin_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileResourceRequest) ProtoMessage() {}

func (x *GetFileResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileResourceRequest.ProtoReflect.Descriptor instead.
func (*GetFileResourceRequest) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *GetFileResourceRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetFileResourceRequest) GetPathEntry() *FileEntry {
	if x != nil {
		return x.PathEntry
	}
	return nil
}

type FileResource struct {
	state            protoimpl.MessageState           `protogen:"open.v1"`
	FileResourceData []*FileResource_FileResourceData `protobuf:"bytes,1,rep,name=file_resource_data,json=fileResourceData,proto3" json:"file_resource_data,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FileResource) Reset() {
	*x = FileResource{}
	mi := &file_plugin_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResource) ProtoMessage() {}

func (x *FileResource) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResource.ProtoReflect.Descriptor instead.
func (*FileResource) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *FileResource) GetFileResourceData() []*FileResource_FileResourceData {
	if x != nil {
		return x.FileResourceData
	}
	return nil
}

type AuthData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AuthDataBytes   []byte                 `protobuf:"bytes,1,opt,name=auth_data_bytes,json=authDataBytes,proto3" json:"auth_data_bytes,omitempty"`
	AuthExpiredTime uint64                 `protobuf:"varint,2,opt,name=auth_expired_time,json=authExpiredTime,proto3" json:"auth_expired_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AuthData) Reset() {
	*x = AuthData{}
	mi := &file_plugin_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthData) ProtoMessage() {}

func (x *AuthData) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthData.ProtoReflect.Descriptor instead.
func (*AuthData) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *AuthData) GetAuthDataBytes() []byte {
	if x != nil {
		return x.AuthDataBytes
	}
	return nil
}

func (x *AuthData) GetAuthExpiredTime() uint64 {
	if x != nil {
		return x.AuthExpiredTime
	}
	return 0
}

type AuthRefresh struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthData      *AuthData              `protobuf:"bytes,1,opt,name=auth_data,json=authData,proto3" json:"auth_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthRefresh) Reset() {
	*x = AuthRefresh{}
	mi := &file_plugin_plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRefresh) ProtoMessage() {}

func (x *AuthRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRefresh.ProtoReflect.Descriptor instead.
func (*AuthRefresh) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *AuthRefresh) GetAuthData() *AuthData {
	if x != nil {
		return x.AuthData
	}
	return nil
}

// oauth config
type OauthConfig struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	ClientId     string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string                 `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	RedirectUri  string                 `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Scopes       []string               `protobuf:"bytes,4,rep,name=scopes,proto3" json:"scopes,omitempty"`
	AuthUrl      string                 `protobuf:"bytes,5,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	QrcodeUrl    string                 `protobuf:"bytes,6,opt,name=qrcode_url,json=qrcodeUrl,proto3" json:"qrcode_url,omitempty"`
	TokenUrl     string                 `protobuf:"bytes,10,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	// json POST application/json
	// form POST application/x-www-form-urlencoded
	// uri GET
	TokenReqType  string `protobuf:"bytes,11,opt,name=token_req_type,json=tokenReqType,proto3" json:"token_req_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OauthConfig) Reset() {
	*x = OauthConfig{}
	mi := &file_plugin_plugin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OauthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthConfig) ProtoMessage() {}

func (x *OauthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthConfig.ProtoReflect.Descriptor instead.
func (*OauthConfig) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *OauthConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OauthConfig) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OauthConfig) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *OauthConfig) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *OauthConfig) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *OauthConfig) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

func (x *OauthConfig) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *OauthConfig) GetTokenReqType() string {
	if x != nil {
		return x.TokenReqType
	}
	return ""
}

type Token struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenType     string                 `protobuf:"bytes,1,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	AccessToken   string                 `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn     uint64                 `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_plugin_plugin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *Token) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *Token) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *Token) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *Token) GetExpiresIn() uint64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

// form data input
type Auth_FormData struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	FormItems     []*Auth_FormData_FormItem `protobuf:"bytes,1,rep,name=form_items,json=formItems,proto3" json:"form_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth_FormData) Reset() {
	*x = Auth_FormData{}
	mi := &file_plugin_plugin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth_FormData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_FormData) ProtoMessage() {}

func (x *Auth_FormData) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_FormData.ProtoReflect.Descriptor instead.
func (*Auth_FormData) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Auth_FormData) GetFormItems() []*Auth_FormData_FormItem {
	if x != nil {
		return x.FormItems
	}
	return nil
}

type Auth_ScanQrcode struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	QrcodeImage      []byte                 `protobuf:"bytes,1,opt,name=qrcode_image,json=qrcodeImage,proto3" json:"qrcode_image,omitempty"`                   // qrcode image
	QrcodeImageParam string                 `protobuf:"bytes,2,opt,name=qrcode_image_param,json=qrcodeImageParam,proto3" json:"qrcode_image_param,omitempty"`  // qrcode image some param,like qrcode check key
	QrcodeExpireTime uint64                 `protobuf:"varint,3,opt,name=qrcode_expire_time,json=qrcodeExpireTime,proto3" json:"qrcode_expire_time,omitempty"` // qrcode expire time
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Auth_ScanQrcode) Reset() {
	*x = Auth_ScanQrcode{}
	mi := &file_plugin_plugin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth_ScanQrcode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_ScanQrcode) ProtoMessage() {}

func (x *Auth_ScanQrcode) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_ScanQrcode.ProtoReflect.Descriptor instead.
func (*Auth_ScanQrcode) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Auth_ScanQrcode) GetQrcodeImage() []byte {
	if x != nil {
		return x.QrcodeImage
	}
	return nil
}

func (x *Auth_ScanQrcode) GetQrcodeImageParam() string {
	if x != nil {
		return x.QrcodeImageParam
	}
	return ""
}

func (x *Auth_ScanQrcode) GetQrcodeExpireTime() uint64 {
	if x != nil {
		return x.QrcodeExpireTime
	}
	return 0
}

type Auth_Callback struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CallbackUrl      string                 `protobuf:"bytes,1,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`                  // callback url
	CallbackUrlParam string                 `protobuf:"bytes,2,opt,name=callback_url_param,json=callbackUrlParam,proto3" json:"callback_url_param,omitempty"` // param for call back url
	CallbackUrlData  string                 `protobuf:"bytes,3,opt,name=callback_url_data,json=callbackUrlData,proto3" json:"callback_url_data,omitempty"`    // url callback data
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Auth_Callback) Reset() {
	*x = Auth_Callback{}
	mi := &file_plugin_plugin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth_Callback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_Callback) ProtoMessage() {}

func (x *Auth_Callback) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_Callback.ProtoReflect.Descriptor instead.
func (*Auth_Callback) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Auth_Callback) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *Auth_Callback) GetCallbackUrlParam() string {
	if x != nil {
		return x.CallbackUrlParam
	}
	return ""
}

func (x *Auth_Callback) GetCallbackUrlData() string {
	if x != nil {
		return x.CallbackUrlData
	}
	return ""
}

type Auth_FormData_FormItem struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Name          string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         *anypb.Any                `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	EnumValues    []*Auth_FormData_FormItem `protobuf:"bytes,3,rep,name=enum_values,json=enumValues,proto3" json:"enum_values,omitempty"` // for dropdown widget
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth_FormData_FormItem) Reset() {
	*x = Auth_FormData_FormItem{}
	mi := &file_plugin_plugin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth_FormData_FormItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_FormData_FormItem) ProtoMessage() {}

func (x *Auth_FormData_FormItem) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_FormData_FormItem.ProtoReflect.Descriptor instead.
func (*Auth_FormData_FormItem) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Auth_FormData_FormItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Auth_FormData_FormItem) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Auth_FormData_FormItem) GetEnumValues() []*Auth_FormData_FormItem {
	if x != nil {
		return x.EnumValues
	}
	return nil
}

type FileResource_FileResourceData struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Url           string                    `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Resolution    FileResource_Resolution   `protobuf:"varint,2,opt,name=resolution,proto3,enum=plugin.FileResource_Resolution" json:"resolution,omitempty"`
	ExpireTime    uint64                    `protobuf:"varint,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	ResourceType  FileResource_ResourceType `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3,enum=plugin.FileResource_ResourceType" json:"resource_type,omitempty"`
	Header        map[string]string         `protobuf:"bytes,6,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileResource_FileResourceData) Reset() {
	*x = FileResource_FileResourceData{}
	mi := &file_plugin_plugin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileResource_FileResourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResource_FileResourceData) ProtoMessage() {}

func (x *FileResource_FileResourceData) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_plugin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResource_FileResourceData.ProtoReflect.Descriptor instead.
func (*FileResource_FileResourceData) Descriptor() ([]byte, []int) {
	return file_plugin_plugin_proto_rawDescGZIP(), []int{5, 0}
}

func (x *FileResource_FileResourceData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FileResource_FileResourceData) GetResolution() FileResource_Resolution {
	if x != nil {
		return x.Resolution
	}
	return FileResource_ResolutionUNSPECIFIED
}

func (x *FileResource_FileResourceData) GetExpireTime() uint64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *FileResource_FileResourceData) GetResourceType() FileResource_ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return FileResource_ResourceTypeUNSPECIFIED
}

func (x *FileResource_FileResourceData) GetHeader() map[string]string {
	if x != nil {
		return x.Header
	}
	return nil
}

var File_plugin_plugin_proto protoreflect.FileDescriptor

var file_plugin_plugin_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x04, 0x0a, 0x04, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x37, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x61,
	0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x1a, 0xd7, 0x01, 0x0a, 0x08, 0x46,
	0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x8b, 0x01, 0x0a, 0x08, 0x46, 0x6f, 0x72, 0x6d, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x1a, 0x8b, 0x01, 0x0a, 0x0a, 0x53, 0x63, 0x61, 0x6e, 0x51, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x71, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x1a, 0x87, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0xce, 0x02, 0x0a,
	0x09, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72,
	0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x69, 0x72, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x03, 0x22, 0x64, 0x0a,
	0x08, 0x44, 0x69, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0c, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0d, 0x64, 0x69, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x4b, 0x65, 0x79, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x30,
	0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x69, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x5e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xf5, 0x04, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xd4, 0x02, 0x0a, 0x10,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x3f, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x68, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x44, 0x10,
	0x02, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x44, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x44, 0x10,
	0x04, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x48, 0x44, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x51, 0x48,
	0x44, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x48, 0x44, 0x10, 0x07, 0x22, 0x4f, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x03, 0x22, 0x5e, 0x0a,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x61, 0x75,
	0x74, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3c, 0x0a,
	0x0b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x2d, 0x0a, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x22, 0x87, 0x02, 0x0a, 0x0b,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x49, 0x6e, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x6b, 0x61, 0x6c, 0x69, 0x61, 0x2f,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x3b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugin_plugin_proto_rawDescOnce sync.Once
	file_plugin_plugin_proto_rawDescData = file_plugin_plugin_proto_rawDesc
)

func file_plugin_plugin_proto_rawDescGZIP() []byte {
	file_plugin_plugin_proto_rawDescOnce.Do(func() {
		file_plugin_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_plugin_proto_rawDescData)
	})
	return file_plugin_plugin_proto_rawDescData
}

var file_plugin_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_plugin_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_plugin_plugin_proto_goTypes = []any{
	(FileEntry_FileType)(0),               // 0: plugin.FileEntry.FileType
	(FileResource_Resolution)(0),          // 1: plugin.FileResource.Resolution
	(FileResource_ResourceType)(0),        // 2: plugin.FileResource.ResourceType
	(*Auth)(nil),                          // 3: plugin.Auth
	(*FileEntry)(nil),                     // 4: plugin.FileEntry
	(*DirEntry)(nil),                      // 5: plugin.DirEntry
	(*GetDirEntryRequest)(nil),            // 6: plugin.GetDirEntryRequest
	(*GetFileResourceRequest)(nil),        // 7: plugin.GetFileResourceRequest
	(*FileResource)(nil),                  // 8: plugin.FileResource
	(*AuthData)(nil),                      // 9: plugin.AuthData
	(*AuthRefresh)(nil),                   // 10: plugin.AuthRefresh
	(*OauthConfig)(nil),                   // 11: plugin.OauthConfig
	(*Token)(nil),                         // 12: plugin.Token
	(*Auth_FormData)(nil),                 // 13: plugin.Auth.FormData
	(*Auth_ScanQrcode)(nil),               // 14: plugin.Auth.ScanQrcode
	(*Auth_Callback)(nil),                 // 15: plugin.Auth.Callback
	(*Auth_FormData_FormItem)(nil),        // 16: plugin.Auth.FormData.FormItem
	(*FileResource_FileResourceData)(nil), // 17: plugin.FileResource.FileResourceData
	nil,                                   // 18: plugin.FileResource.FileResourceData.HeaderEntry
	(*anypb.Any)(nil),                     // 19: google.protobuf.Any
}
var file_plugin_plugin_proto_depIdxs = []int32{
	19, // 0: plugin.Auth.auth_methods:type_name -> google.protobuf.Any
	0,  // 1: plugin.FileEntry.file_type:type_name -> plugin.FileEntry.FileType
	4,  // 2: plugin.DirEntry.file_entries:type_name -> plugin.FileEntry
	4,  // 3: plugin.GetDirEntryRequest.path_entry:type_name -> plugin.FileEntry
	4,  // 4: plugin.GetFileResourceRequest.path_entry:type_name -> plugin.FileEntry
	17, // 5: plugin.FileResource.file_resource_data:type_name -> plugin.FileResource.FileResourceData
	9,  // 6: plugin.AuthRefresh.auth_data:type_name -> plugin.AuthData
	16, // 7: plugin.Auth.FormData.form_items:type_name -> plugin.Auth.FormData.FormItem
	19, // 8: plugin.Auth.FormData.FormItem.value:type_name -> google.protobuf.Any
	16, // 9: plugin.Auth.FormData.FormItem.enum_values:type_name -> plugin.Auth.FormData.FormItem
	1,  // 10: plugin.FileResource.FileResourceData.resolution:type_name -> plugin.FileResource.Resolution
	2,  // 11: plugin.FileResource.FileResourceData.resource_type:type_name -> plugin.FileResource.ResourceType
	18, // 12: plugin.FileResource.FileResourceData.header:type_name -> plugin.FileResource.FileResourceData.HeaderEntry
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_plugin_plugin_proto_init() }
func file_plugin_plugin_proto_init() {
	if File_plugin_plugin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_plugin_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugin_plugin_proto_goTypes,
		DependencyIndexes: file_plugin_plugin_proto_depIdxs,
		EnumInfos:         file_plugin_plugin_proto_enumTypes,
		MessageInfos:      file_plugin_plugin_proto_msgTypes,
	}.Build()
	File_plugin_plugin_proto = out.File
	file_plugin_plugin_proto_rawDesc = nil
	file_plugin_plugin_proto_goTypes = nil
	file_plugin_plugin_proto_depIdxs = nil
}
